#!/usr/bin/env python
from __future__ import print_function
import os
import sys

OKGREEN = '\033[92m'
WARNING = '\033[93m'
RESET_COLOR = '\033[0m'


def install_dotfiles():
    home_dir = os.path.expanduser('~')
    print("installing dotfiles into", home_dir, "...\n")
    for root, dirs, files in os.walk("."):
        for target_name in (files + dirs):
            if not target_name.endswith('.target'):
                continue
            link_name = '.' + target_name[:-len('.target')]
            link_path = os.path.join(home_dir, link_name)
            # os.path.exists returns False for broken symlinks
            if os.path.exists(link_path) and not overwrite_existing(link_path):
                continue
            _create_symlink(root, target_name, link_path)
    print("\ndone")


def overwrite_existing(link_path):
    if not os.path.islink(link_path):
        print("{}{} exists but is not a symlink. Skipping...{}".format(
            WARNING, link_path, RESET_COLOR))
        return

    print("symlink at {} already exists - ".format(link_path), end='')

    if len(sys.argv) > 1 and sys.argv[1] == '--force':
        print("overwriting.")
        return True
    else:
        print("use --force to overwrite.")


def _create_symlink(root, target_name, link_path):
    target_path = os.path.join(root, target_name)
    os.unlink(link_path)
    os.symlink(os.path.abspath(target_path), link_path)
    print("{}created symlink {} -> {} {}".format(
        OKGREEN, link_path, target_path, RESET_COLOR))

install_dotfiles()
