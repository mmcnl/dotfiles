# -*- mode: shell-script -*-

echo
date

# git
alias gaa="git add --all"
alias gacm='gaa && git ci -m'
alias gap="git add -p"
alias gb="git branch -a"
alias gc="git commit"
alias gcm="git commit -m"
alias gd="git diff --minimal -p"
alias gdc="gd --cached"
alias gdcw="gdc -w"
alias gdw="gd -w"
alias gdwc="gdc -w"
alias gf="git fetch"
alias gg="git --no-pager grep --break --heading --line-number --color"
alias gl="git l"
alias gla="git la"
alias gll="git log --summary --stat"
alias glp="git log -p --since='1 month ago'"
alias gs="git status"
alias gsa="git status --untracked-files=all"
alias gss="git short-status"


# ls
alias l.='ls -l -d .*'
alias l='ls -l'
alias la='ls -lA'
alias las='ls -A'
alias lh='ls -l -lh'
alias ll='ls -l'
alias lr='ls -lA -R'
alias ls='ls --group-directories-first --color=auto'
alias lt='ls -l -ltr'
alias lz='ls -l --sort=size -r'

# cd
alias u='cd ..'
alias uu='cd ../..'
alias uuu='cd ../../..'

# ignore duplicate and empty lines
export HISTCONTROL=ignoreboth
# save a reasonable amount of bash_history
export HISTSIZE=3000
# save history from simultaneous shells
shopt -s histappend
# save multiline cmds
shopt -s cmdhist
# ignore small spelling errors
shopt -s cdspell

export NO_COLOR="\[\033[0m\]"
export GREEN="\[\033[0;32m\]"
export RED="\[\033[0;31m\]"
export BLUE="\[\033[0;34m\]"
export CYAN="\[\033[0;36m\]"
export YELLOWBLUE="\[\033[1;33;44m\]"

time_since_last_commit() {
    ref=$(git symbolic-ref HEAD 2> /dev/null 2>&1) || return
    git log -1 --pretty=format:"%ar" | sed 's/\([0-9]*\) \(.\).*/\1\2/'
}

git_prompt () {
    if ! git rev-parse --git-dir > /dev/null 2>&1; then return 0; fi
    git_branch="$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')"
    git_rev="$(git rev-parse --short HEAD | sed s/..$//)"

    echo -n "$RED"
    git ls-files --others --exclude-standard --directory   --no-empty-directory --error-unmatch -- ':/*' >/dev/null 2>/dev/null || echo -n "$CYAN"
    echo "[$(time_since_last_commit) $git_branch $git_rev] $NO_COLOR"
}

bash_prompt() {
    # Turn the prompt symbol red if the user is root
    if [ $(id -u) -eq 0 ]; then
        USER_PRIV="$RED#$NO_COLOR"
    else
        USER_PRIV='$'
    fi
    # work around trailing newlines being swallowed by command substitution
    # http://stackoverflow.com/a/15184414/1163042
    # add newline only if non-null
    gp=$(git_prompt)
    [[ -n $gp ]] && gp=$gp$'\n'
    echo "${NEWLINE}$gp$YELLOWBLUE\u@\h$NO_COLOR $GREEN\w$NO_COLOR $USER_PRIV "
    # echo "${NEWLINE}$gp$GREEN\w$NO_COLOR $USER_PRIV "
}
PROMPT_COMMAND='history -a; PS1="$(bash_prompt)"'
