# -*- mode: shell-script -*-

# functions shared between zsh and bash

git() {
    /usr/bin/env git "$@"
    estatus="$?"
    [[ $estatus = 0 ]] || return $estatus

    if [ -e tags ]
    then
        for opt in "$@"; do
            case "$opt" in
                ci | commit | rebase | merge | pull)
                    echo "updating tags..."
                    git ls-files | grep -E '\.rb|yml|py$' | xargs ctags -e --languages=ruby,yaml,python
                    break
                    ;;
            esac
        done
    fi
}

time_since_last_commit() {
    ref=$(git symbolic-ref HEAD 2> /dev/null 2>&1) || return
    git log -1 --pretty=format:"%ar" | sed 's/\([0-9]*\) \(.\).*/\1\2/'
}

git_prompt () {
    if ! git rev-parse --git-dir > /dev/null 2>&1; then return 0; fi
    git_branch="$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')"
    git_rev="$(git rev-parse --short HEAD | sed s/..$//)"
    git_status=$(git status)
    if [[ $git_status =~ 'clean' &&
              $git_status != 'ahead' &&
              $git_status != 'behind' ]]; then
        echo -n "$CYAN"
    else
        echo -n "$RED"
    fi
    echo "[$(time_since_last_commit) $git_branch $git_rev] $NO_COLOR"
}

pk() {
    kill -9 "$(ps aux | ag -v '%CPU' | ag -v '%CPU' | selecta | awk '{print $2 }')"
}

alias ag='ag --noheading --hidden --smart-case'
alias agl='ag -l'

# ignore noisy files
agig() {
    ag -v '\.git/|\.DS_Store|tmp/cache'
}

# find all files without exception
au() {
    ag --unrestricted "$@"
}

# use grep to compress blank lines in output
agv() {
    ag -v "$@" | grep --color=none .
}

# fasd
alias ef='f -e emacsclient_no_wait'
efs() {
    emacsclient_no_wait "$(fasd -fl | selecta -s "${@:- }")"
}
zs() {
    cd "$(fasd -dl | selecta -s "${@:- }")" || exit
}

# ag -g - find files by filename
agg() {
    ag --unrestricted --depth 10 -g "${@:-.}" | agig
}
as() {
    agg . | selecta -s "${@:- }"
}
ea() {
    emacsclient_no_wait "$(as "$@")"
}

# open file matching text in emacs
eg() {
    ~/bin/launch_emacs.rb "$(ag "$@" | selecta -s "${@:- }" --height=full )"
}

# recent files
r() {
    ag --depth 8 -g . | xargs -I{} stat -c %y\ %n "{}" | sort -r | cut -c 36- | head -30
}
er() {
    emacsclient_no_wait "$(r | selecta -s "${@:- }")"
}
