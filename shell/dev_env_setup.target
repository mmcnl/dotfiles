# -*- mode: shell-script -*-

# set up vars and shell for development

if [[ -d "/usr/local/heroku/bin" ]]; then
    export PATH="/usr/local/heroku/bin:$PATH"
fi

if command -v yarn > /dev/null 2>&1; then
    export PATH="$PATH:$HOME/.config/yarn/global/node_modules/.bin"
fi

############ eval'd helper functions ############

# for z, f, and other nice helpers - https://github.com/clvv/fasd
if which fasd > /dev/null; then eval "$(fasd --init auto)"; fi

# lighter weight than rbenv - https://github.com/postmodern/chruby
if [[ -x "/usr/local/share/chruby" ]]; then
    source "/usr/local/share/chruby/chruby.sh"
    source "/usr/local/share/chruby/auto.sh"
fi

# to support remote server envs
if [ -d "$HOME/.rbenv" ]; then
  export PATH=$HOME/.rbenv/bin:$PATH;
  export RBENV_ROOT=$HOME/.rbenv;
  eval "$(rbenv init -)";
fi

# PYTHON
if [[ -d "/opt/miniconda3" ]]; then
    export PATH="/opt/miniconda3/bin:$PATH"
    export WORKON_HOME="/opt/miniconda3/envs"
fi

git() {
    /usr/bin/env git "$@"
    estatus="$?"
    [[ $estatus = 0 ]] || return $estatus

    if [ -e tags ]
    then
        for opt in "$@"; do
            case "$opt" in
                ci | commit | rebase | merge | pull)
                    update_etags
                    break
                    ;;
            esac
        done
    fi
}

##################################################
# source any .env file upon cd'ing
# https://github.com/kennethreitz/autoenv
# if [[ -x "/usr/local/opt/autoenv/activate.sh" ]]; then
#     source /usr/local/opt/autoenv/activate.sh
# fi
#
