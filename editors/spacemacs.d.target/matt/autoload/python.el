(setq-default python-indent-offset 4)

(setq python-shell-interpreter "ipython")

;; TODO: revisit https://github.com/gregsexton/ob-ipython/issues/28
(setq python-shell-completion-native-enable nil)

;; https://github.com/purcell/exec-path-from-shell#usage
(exec-path-from-shell-copy-env "WORKON_HOME")

(pyvenv-mode 1)
(setq pyvenv-tracking-ask-before-change t)

;; https://github.com/flycheck/flycheck/issues/185#issuecomment-215424092
(flycheck-add-next-checker 'python-pylint 'python-flake8)

(add-hook 'python-mode-hook
          (function (lambda ()
                      (setq flycheck-disabled-checkers '(
                                                         ;; python-flake8
                                                         ))
                      )) t)
(spacemacs/declare-prefix-for-mode 'python-mode "mx" "python/text")
(evil-leader/set-key-for-mode 'python-mode "xx" 'beautify-python-buffer)
(evil-leader/set-key-for-mode 'python-mode "ss" 'run-python)
(evil-leader/set-key-for-mode 'python-mode "Vu" 'conda-env-update)

(defun conda-env-update() (interactive)(shell-command "conda env update"))

(add-hook 'inferior-python-mode-hook
          (function (lambda ()
                      (visual-line-mode)
                      )) t)

(defun autopep8-current-buffer ()
  "Applies autopep8"
  (interactive)
  (shell-command-on-region
   ;; beginning and end of buffer
   (point-min)
   (point-max)
   ;; command and parameters
   "autopep8 --aggressive --experimental -"
   ;; output buffer
   (current-buffer)
   ;; replace?
   t
   ;; name of the error buffer
   "*autopep8 Error Buffer*"
   ;; show error buffer?
   t))

(defun beautify-python-buffer()
  (interactive)
  (setq temp-point (point))
  (autopep8-current-buffer)
  (goto-char temp-point)
  (message "applied autopep8")
  )

(defun python-2to3 ()
  "Convert current buffer from python 2 to python 3.

This command calls python3's script 「2to3」. A backup will be generated by 「2to3」 and named “.bak”."
  (interactive)
  (let* (
         (fName (buffer-file-name))
         (fSuffix (file-name-extension fName))
         )
    (when (buffer-modified-p)
      (progn
        (when (y-or-n-p "Buffer modified. Do you want to save first?")
          (save-buffer) ) ) )

    (if (or (string-equal fSuffix "py") (string-equal fSuffix "py3") )
        (progn
          (shell-command (format "2to3 -w %s" fName))
          (revert-buffer  "IGNORE-AUTO" "NOCONFIRM" "PRESERVE-MODES")
          )
      (progn
        (error "file 「%s」 doesn't end in “.py” or “.py3”." fName)
        )
      )
    ))
