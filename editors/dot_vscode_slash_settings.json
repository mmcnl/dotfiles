{
  "AllAutocomplete.cycleOpenDocumentsOnLaunch": true,
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[magit]": {
    "editor.lineNumbers": "off",
    "editor.minimap.enabled": false,
    "editor.renderWhitespace": "none"
  },
  "aceJump.finder.pattern": "[\\\\ /!,-.{_(\"'><$\\[\t]",
  "aceJump.placeholder.upperCase": true,
  "aceJump.scroll.mode": "none",
  "breadcrumbs.enabled": false,
  "clipboard-manager.snippet.enabled": false,
  "customizeUI.activityBar": "regular",
  "customizeUI.stylesheet": {
    ".monaco-editor .margin-view-overlays .line-numbers": "font-size: 80% !important;",
    ".statusbar .left-items.items-container": "font-size: 13px !important",
    ".statusbar .right-items.items-container": "font-size: 13px !important"
  },
  "customizeUI.titleBar": "regular",
  "diffEditor.ignoreTrimWhitespace": false,
  "diffEditor.renderSideBySide": false,
  "editor.acceptSuggestionOnEnter": "off",
  "editor.cursorBlinking": "solid",
  "editor.cursorSurroundingLines": 1,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.folding": true,
  "editor.fontFamily": "'Fira Code', Menlo, Monaco, 'Courier New', monospace",
  "editor.fontSize": 15,
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.glyphMargin": true,
  "editor.lineNumbers": "on",
  "editor.minimap.enabled": false,
  "editor.minimap.size": "fill",
  "editor.multiCursorModifier": "alt",
  "editor.occurrencesHighlight": false,
  "editor.quickSuggestions": {
    "comments": true,
    "other": true,
    "strings": true
  },
  "editor.renderWhitespace": "none",
  "editor.tabSize": 2,
  "emmet.includeLanguages": {
    "javascript": "html",
    "typescript": "html"
  },
  "errorLens.gutterIconsEnabled": true,
  "files.associations": {
    "*.inc": "php",
    "*.json": "jsonc"
  },
  "files.hotExit": "off",
  "fzf-quick-open.ripgrepSearchStyle": "Smart case",
  "git.confirmSync": false,
  "gitlens.advanced.messages": {
    "suppressCommitHasNoPreviousCommitWarning": true
  },
  "gitlens.blame.avatars": false,
  "gitlens.codeLens.recentChange.command": "gitlens.showQuickCommitDetails",
  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.changesDiff": "hunk",
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.statusBar.reduceFlicker": true,
  "intelephense.diagnostics.undefinedFunctions": false,
  "intelephense.diagnostics.undefinedMethods": false,
  "intelephense.diagnostics.undefinedTypes": false,
  "intelephense.environment.shortOpenTag": true,
  "javascript.implicitProjectConfig.experimentalDecorators": true,
  "markdown.extension.tableFormatter.normalizeIndentation": true,
  "markdown.preview.lineHeight": 1.2,
  "markdownlint.run": "onSave",
  "multiCommand.commands": [
    {
      "command": "multiCommand.trueMaximizeWindow",
      "sequence": [
        "workbench.action.closeSidebar",
        "workbench.action.toggleEditorWidths",
        "workbench.action.closePanel"
      ]
    }
  ],
  "problems.showCurrentInStatus": true,
  "scm.diffDecorationsGutterWidth": 2,
  "screencastMode.onlyKeyboardShortcuts": true,
  "search.smartCase": true,
  "settings.cycle": [
    {
      "id": "colorTheme",
      "overrideWorkspaceSettings": false,
      "values": [
        {
          "workbench.colorTheme": "One Dark Pro"
        },
        {
          "workbench.colorTheme": "Solarized Light"
        }
      ]
    },
    {
      "id": "lineNumbers",
      "values": [
        {
          "editor.folding": false,
          "editor.glyphMargin": false,
          "editor.lineNumbers": "off"
        },
        {
          "editor.folding": true,
          "editor.glyphMargin": true,
          "editor.lineNumbers": "on"
        }
      ]
    }
  ],
  "sync-rsync.executable": "/Users/matt/dev/ia/kre8/branch-sync-edit.sh",
  "sync-rsync.local": "/Users/matt/petabox",
  "sync-rsync.onSaveIndividual": true,
  "sync-rsync.remote": "mattm@home.archive.org:petabox",
  "terminal.integrated.fontSize": 14,
  "vim.debug.loggingLevelForAlert": "info",
  "vim.debug.loggingLevelForConsole": "info",
  "vim.easymotion": false,
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-e>": false,
    "<C-k>": false
  },
  "vim.highlightedyank.enable": true,
  "vim.insertModeKeyBindings": [
    {
      "after": ["<Esc>"],
      "before": ["f", "d"]
    },
    {
      "after": ["<enter>"],
      "before": ["<C-j>"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "args": "m",
          "command": "whichkey.triggerKey"
        }
      ]
    },
    {
      "after": ["i", "<enter>", "<Esc>", "k", "$"],
      "before": ["ctrl+j"]
    }
  ],
  "vim.overrideCopy": false,
  "vim.useSystemClipboard": true,
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "args": "m",
          "command": "whichkey.triggerKey"
        }
      ]
    }
  ],
  "vspacecode.bindingOverrides": [],
  "vspacecode.bindings": [
    {
      "command": "extension.aceJump",
      "key": " ",
      "name": "Ace Jump",
      "type": "command"
    },
    {
      "commands": [
        "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "list.select"
      ],
      "key": "\t",
      "name": "Last buffer",
      "type": "commands"
    },
    {
      "command": "workbench.action.terminal.focus",
      "key": "!",
      "name": "Show terminal",
      "type": "command"
    },
    {
      "command": "workbench.action.terminal.openNativeConsole",
      "key": "\"",
      "name": "Open new external terminal",
      "type": "command"
    },
    {
      "command": "workbench.action.terminal.focus",
      "key": "'",
      "name": "Show terminal",
      "type": "command"
    },
    {
      "commands": [
        "editor.action.addSelectionToNextFindMatch",
        "workbench.action.findInFiles"
      ],
      "key": "*",
      "name": "Search in project with selection",
      "type": "commands"
    },
    {
      "command": "workbench.action.findInFiles",
      "key": "/",
      "name": "Search in project",
      "type": "command"
    },
    {
      "command": "workbench.action.focusFirstEditorGroup",
      "key": "1",
      "name": "Focus 1st window",
      "type": "command"
    },
    {
      "command": "workbench.action.focusSecondEditorGroup",
      "key": "2",
      "name": "Focus 2nd window",
      "type": "command"
    },
    {
      "command": "workbench.action.focusThirdEditorGroup",
      "key": "3",
      "name": "Focus 3rd window",
      "type": "command"
    },
    {
      "command": "workbench.action.focusFourthEditorGroup",
      "key": "4",
      "name": "Focus 4th window",
      "type": "command"
    },
    {
      "command": "workbench.action.focusFifthEditorGroup",
      "key": "5",
      "name": "Focus 5th window",
      "type": "command"
    },
    {
      "command": "workbench.action.focusSixthEditorGroup",
      "key": "6",
      "name": "Focus 6th window",
      "type": "command"
    },
    {
      "command": "workbench.action.focusSeventhEditorGroup",
      "key": "7",
      "name": "Focus 7th window",
      "type": "command"
    },
    {
      "command": "workbench.action.focusEighthEditorGroup",
      "key": "8",
      "name": "Focus 8th window",
      "type": "command"
    },
    {
      "command": "editor.action.commentLine",
      "key": ";",
      "name": "Toggle comment",
      "type": "command"
    },
    {
      "bindings": [
        {
          "command": "editor.action.smartSelect.grow",
          "key": "v",
          "name": "Grow selection",
          "type": "command"
        },
        {
          "command": "editor.action.smartSelect.shrink",
          "key": "V",
          "name": "Shrink selection",
          "type": "command"
        }
      ],
      "command": "editor.action.smartSelect.grow",
      "key": "v",
      "name": "Smart select/expand region",
      "type": "transient"
    },
    {
      "bindings": [
        {
          "command": "workbench.action.lastEditorInGroup",
          "key": "0",
          "name": "Last buffer in window",
          "type": "command"
        },
        {
          "command": "workbench.action.firstEditorInGroup",
          "key": "1",
          "name": "First buffer in window",
          "type": "command"
        },
        {
          "command": "workbench.action.showAllEditors",
          "key": "b",
          "name": "Show all buffers",
          "type": "command"
        },
        {
          "command": "workbench.action.closeActiveEditor",
          "key": "d",
          "name": "Close active buffer",
          "type": "command"
        },
        {
          "command": "openInFinder.open",
          "key": "f",
          "name": "Open in Finder",
          "type": "command"
        },
        {
          "command": "workbench.action.nextEditor",
          "key": "n",
          "name": "Next buffer",
          "type": "command"
        },
        {
          "command": "workbench.action.previousEditor",
          "key": "p",
          "name": "Previous buffer",
          "type": "command"
        },
        {
          "command": "workbench.action.files.newUntitledFile",
          "key": "s",
          "name": "Scratch buffer",
          "type": "command"
        },
        {
          "command": "workbench.action.pinEditor",
          "key": "t",
          "name": "Pin buffer",
          "type": "command"
        },
        {
          "command": "workbench.action.reopenClosedEditor",
          "key": "u",
          "name": "Reopen closed buffer",
          "type": "command"
        },
        {
          "command": "workbench.action.showEditorsInActiveGroup",
          "key": "B",
          "name": "Show all buffers in active window",
          "type": "command"
        },
        {
          "command": "workbench.action.moveEditorToLeftGroup",
          "key": "H",
          "name": "Move buffer into left window",
          "type": "command"
        },
        {
          "command": "workbench.action.moveEditorToBelowGroup",
          "key": "J",
          "name": "Move buffer into below window",
          "type": "command"
        },
        {
          "command": "workbench.action.moveEditorToAboveGroup",
          "key": "K",
          "name": "Move buffer into above window",
          "type": "command"
        },
        {
          "command": "workbench.action.moveEditorToRightGroup",
          "key": "L",
          "name": "Move buffer into right window",
          "type": "command"
        },
        {
          "command": "workbench.action.closeOtherEditors",
          "key": "M",
          "name": "Close other buffers",
          "type": "command"
        },
        {
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardPasteAction"
          ],
          "key": "P",
          "name": "Paste clipboard to buffer",
          "type": "commands"
        },
        {
          "command": "workbench.action.unpinEditor",
          "key": "T",
          "name": "Unpin buffer",
          "type": "command"
        },
        {
          "command": "vspacecode.copyWholeBuffer",
          "key": "Y",
          "name": "Copy buffer to clipboard",
          "type": "command"
        },
        {
          "bindings": [
            {
              "commands": [
                "workbench.action.splitEditorLeft",
                "workbench.action.files.newUntitledFile",
                "workbench.action.closeOtherEditors"
              ],
              "key": "h",
              "name": "New untitled buffer (split left)",
              "type": "commands"
            },
            {
              "commands": [
                "workbench.action.splitEditorDown",
                "workbench.action.files.newUntitledFile",
                "workbench.action.closeOtherEditors"
              ],
              "key": "j",
              "name": "New untitled buffer (split down)",
              "type": "commands"
            },
            {
              "commands": [
                "workbench.action.splitEditorUp",
                "workbench.action.files.newUntitledFile",
                "workbench.action.closeOtherEditors"
              ],
              "key": "k",
              "name": "New untitled buffer (split up)",
              "type": "commands"
            },
            {
              "commands": [
                "workbench.action.splitEditorRight",
                "workbench.action.files.newUntitledFile",
                "workbench.action.closeOtherEditors"
              ],
              "key": "l",
              "name": "New untitled buffer (split right)",
              "type": "commands"
            },
            {
              "command": "workbench.action.files.newUntitledFile",
              "key": "n",
              "name": "New untitled buffer",
              "type": "command"
            }
          ],
          "key": "N",
          "name": "New Buffer...",
          "type": "bindings"
        }
      ],
      "key": "b",
      "name": "Buffers...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "editor.action.commentLine",
          "key": "l",
          "name": "Toggle line comment",
          "type": "command"
        },
        {
          "command": "editor.action.marker.nextInFiles",
          "key": "n",
          "name": "Next error",
          "type": "command"
        },
        {
          "command": "editor.action.marker.prevInFiles",
          "key": "N",
          "name": "Previous error",
          "type": "command"
        }
      ],
      "key": "c",
      "name": "Comments...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "workbench.action.debug.continue",
          "key": "c",
          "name": "Continue debug",
          "type": "command"
        },
        {
          "command": "workbench.action.debug.start",
          "key": "d",
          "name": "Start debug",
          "type": "command"
        },
        {
          "command": "workbench.action.debug.stepInto",
          "key": "i",
          "name": "Step into",
          "type": "command"
        },
        {
          "command": "debug.jumpToCursor",
          "key": "j",
          "name": "Jump to cursor",
          "type": "command"
        },
        {
          "command": "workbench.action.debug.stepOut",
          "key": "o",
          "name": "Step out",
          "type": "command"
        },
        {
          "command": "workbench.action.debug.pause",
          "key": "p",
          "name": "Pause debug",
          "type": "command"
        },
        {
          "command": "workbench.action.debug.stepOver",
          "key": "s",
          "name": "Step over",
          "type": "command"
        },
        {
          "command": "workbench.debug.action.toggleRepl",
          "key": "v",
          "name": "REPL",
          "type": "command"
        },
        {
          "command": "workbench.debug.action.focusWatchView",
          "key": "w",
          "name": "Focus on watch window",
          "type": "command"
        },
        {
          "command": "workbench.action.debug.run",
          "key": "D",
          "name": "Run without debugging",
          "type": "command"
        },
        {
          "command": "workbench.action.debug.restart",
          "key": "R",
          "name": "Restart debug",
          "type": "command"
        },
        {
          "command": "workbench.action.debug.stop",
          "key": "S",
          "name": "Stop debug",
          "type": "command"
        },
        {
          "command": "editor.debug.action.selectionToWatch",
          "key": "W",
          "name": "Add to watch",
          "type": "command"
        },
        {
          "bindings": [
            {
              "command": "editor.debug.action.toggleBreakpoint",
              "key": "b",
              "name": "Toggle breakpoint",
              "type": "command"
            },
            {
              "command": "editor.debug.action.conditionalBreakpoint",
              "key": "c",
              "name": "Add conditional breakpoint",
              "type": "command"
            },
            {
              "command": "debug.removeBreakpoint",
              "key": "d",
              "name": "Delete breakpoint",
              "type": "command"
            },
            {
              "command": "debug.enableOrDisableBreakpoint",
              "key": "e",
              "name": "Enable breakpoint",
              "type": "command"
            },
            {
              "command": "workbench.debug.viewlet.action.addFunctionBreakpointAction",
              "key": "f",
              "name": "Add function breakpoint",
              "type": "command"
            },
            {
              "command": "editor.debug.action.toggleInlineBreakpoint",
              "key": "i",
              "name": "Toggle inline breakpoint",
              "type": "command"
            },
            {
              "bindings": [
                {
                  "command": "editor.debug.action.goToNextBreakpoint",
                  "key": "n",
                  "name": "Next breakpoint",
                  "type": "command"
                },
                {
                  "command": "editor.debug.action.goToPreviousBreakpoint",
                  "key": "p",
                  "name": "Previous breakpoint",
                  "type": "command"
                }
              ],
              "command": "editor.debug.action.goToNextBreakpoint",
              "key": "n",
              "name": "Next breakpoint",
              "type": "transient"
            },
            {
              "bindings": [
                {
                  "command": "editor.debug.action.goToNextBreakpoint",
                  "key": "n",
                  "name": "Next breakpoint",
                  "type": "command"
                },
                {
                  "command": "editor.debug.action.goToPreviousBreakpoint",
                  "key": "p",
                  "name": "Previous breakpoint",
                  "type": "command"
                }
              ],
              "command": "editor.debug.action.goToPreviousBreakpoint",
              "key": "p",
              "name": "Previous breakpoint",
              "type": "transient"
            },
            {
              "command": "debug.enableOrDisableBreakpoint",
              "key": "s",
              "name": "Disable breakpoint",
              "type": "command"
            },
            {
              "command": "workbench.debug.viewlet.action.removeAllBreakpoints",
              "key": "D",
              "name": "Delete all breakpoints",
              "type": "command"
            },
            {
              "command": "workbench.debug.viewlet.action.enableAllBreakpoints",
              "key": "E",
              "name": "Enable all breakpoints",
              "type": "command"
            },
            {
              "command": "workbench.debug.viewlet.action.disableAllBreakpoints",
              "key": "S",
              "name": "Disable all breakpoints",
              "type": "command"
            }
          ],
          "key": "b",
          "name": "Breakpoint...",
          "type": "bindings"
        }
      ],
      "key": "d",
      "name": "Debug...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "bindings": [
            {
              "command": "editor.action.marker.nextInFiles",
              "key": "n",
              "name": "Next error",
              "type": "command"
            },
            {
              "command": "editor.action.marker.prevInFiles",
              "key": "p",
              "name": "Previous error",
              "type": "command"
            },
            {
              "command": "editor.action.marker.prevInFiles",
              "key": "N",
              "name": "Previous error",
              "type": "command"
            }
          ],
          "key": ".",
          "name": "Error transient",
          "type": "transient"
        },
        {
          "command": "workbench.actions.view.problems",
          "key": "l",
          "name": "List errors",
          "type": "command"
        },
        {
          "command": "editor.action.marker.nextInFiles",
          "key": "n",
          "name": "Next error",
          "type": "command"
        },
        {
          "command": "editor.action.marker.prevInFiles",
          "key": "p",
          "name": "Previous error",
          "type": "command"
        },
        {
          "command": "editor.action.marker.prevInFiles",
          "key": "N",
          "name": "Previous error",
          "type": "command"
        }
      ],
      "key": "e",
      "name": "Errors...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "editor.action.formatDocument",
          "key": "=",
          "name": "Format file",
          "type": "command"
        },
        {
          "command": "file-browser.open",
          "key": "f",
          "name": "Open file/folder",
          "type": "command"
        },
        {
          "command": "workbench.view.explorer",
          "key": "k",
          "name": "open file in explorer",
          "type": "command"
        },
        {
          "command": "workbench.action.editor.changeLanguageMode",
          "key": "l",
          "name": "Change file language",
          "type": "command"
        },
        {
          "command": "explorer.newFile",
          "key": "n",
          "name": "New file",
          "type": "command"
        },
        {
          "command": "explorer.openWith",
          "key": "o",
          "name": "Open with...",
          "type": "command"
        },
        {
          "command": "workbench.action.openRecent",
          "key": "r",
          "name": "Open recent...",
          "type": "command"
        },
        {
          "command": "workbench.action.files.save",
          "key": "s",
          "name": "Save file",
          "type": "command"
        },
        {
          "bindings": [
            {
              "command": "workbench.view.explorer",
              "key": "",
              "name": "Show explorer view",
              "type": "command"
            },
            {
              "command": "workbench.action.toggleSidebarVisibility",
              "key": "when:sideBarVisible && explorerViewletVisible",
              "name": "Hide side bar",
              "type": "command"
            }
          ],
          "key": "t",
          "name": "Toggle tree/explorer view",
          "type": "conditional"
        },
        {
          "command": "workbench.action.files.showOpenedFileInNewWindow",
          "key": "w",
          "name": "Open active in new window",
          "type": "command"
        },
        {
          "commands": [
            "workbench.files.action.showActiveFileInExplorer",
            "deleteFile"
          ],
          "key": "D",
          "name": "Delete current file",
          "type": "commands"
        },
        {
          "command": "revealFileInOS",
          "key": "L",
          "name": "Locate file",
          "type": "command"
        },
        {
          "commands": [
            "workbench.files.action.showActiveFileInExplorer",
            "renameFile"
          ],
          "key": "R",
          "name": "Rename file",
          "type": "commands"
        },
        {
          "command": "workbench.action.files.saveAll",
          "key": "S",
          "name": "Save all files",
          "type": "command"
        },
        {
          "command": "workbench.files.action.showActiveFileInExplorer",
          "key": "T",
          "name": "Show active file in tree/explorer view",
          "type": "command"
        },
        {
          "bindings": [
            {
              "command": "workbench.action.openGlobalSettings",
              "key": "d",
              "name": "Open settings",
              "type": "command"
            },
            {
              "command": "workbench.action.openGlobalKeybindings",
              "key": "k",
              "name": "Open global key bindings",
              "type": "command"
            },
            {
              "command": "workbench.action.configureLanguageBasedSettings",
              "key": "l",
              "name": "Open language settings",
              "type": "command"
            },
            {
              "command": "workbench.action.openSnippets",
              "key": "s",
              "name": "Configure user snippets",
              "type": "command"
            },
            {
              "command": "workbench.action.openWorkspaceSettings",
              "key": "w",
              "name": "Open workspace settings",
              "type": "command"
            },
            {
              "command": "workbench.action.openSettingsJson",
              "key": "D",
              "name": "Open settings JSON",
              "type": "command"
            },
            {
              "command": "workbench.action.openGlobalKeybindingsFile",
              "key": "K",
              "name": "Open global key bindings JSON",
              "type": "command"
            },
            {
              "command": "workbench.action.openWorkspaceSettingsFile",
              "key": "W",
              "name": "Open workspace settings JSON",
              "type": "command"
            }
          ],
          "key": "e",
          "name": "Emacs/VSpaceCode...",
          "type": "bindings"
        },
        {
          "bindings": [
            {
              "command": "editor.action.detectIndentation",
              "key": "d",
              "name": "Detect indentation",
              "type": "command"
            },
            {
              "command": "changeEditorIndentation",
              "key": "i",
              "name": "Change indentation",
              "type": "command"
            },
            {
              "command": "editor.action.reindentlines",
              "key": "r",
              "name": "Reindent",
              "type": "command"
            },
            {
              "command": "editor.action.indentationToSpaces",
              "key": "s",
              "name": "Convert indentation to spaces",
              "type": "command"
            },
            {
              "command": "editor.action.indentationToTabs",
              "key": "t",
              "name": "Convert indentation to tabs",
              "type": "command"
            },
            {
              "command": "editor.action.reindentselectedlines",
              "key": "R",
              "name": "Reindent selected",
              "type": "command"
            }
          ],
          "key": "i",
          "name": "Indentation...",
          "type": "bindings"
        },
        {
          "bindings": [
            {
              "command": "vspacecode.copyPathWithLineColumn",
              "key": "c",
              "name": "Copy path of active file with line and column",
              "type": "command"
            },
            {
              "command": "vspacecode.copyDirectoryPath",
              "key": "d",
              "name": "Copy directory path of the active file",
              "type": "command"
            },
            {
              "command": "vspacecode.copyPathWithLine",
              "key": "l",
              "name": "Copy path of active file with line",
              "type": "command"
            },
            {
              "command": "vspacecode.copyFilename",
              "key": "n",
              "name": "Copy filename of active file",
              "type": "command"
            },
            {
              "command": "vspacecode.copyPath",
              "key": "y",
              "name": "Copy path of active file",
              "type": "command"
            },
            {
              "command": "vspacecode.copyRelativePathWithLineColumn",
              "key": "C",
              "name": "Copy relative path of active file with line and column",
              "type": "command"
            },
            {
              "command": "vspacecode.copyRelativeDirectoryPath",
              "key": "D",
              "name": "Copy relative directory path of the active file",
              "type": "command"
            },
            {
              "command": "vspacecode.copyRelativePathWithLine",
              "key": "L",
              "name": "Copy relative path of active file with line",
              "type": "command"
            },
            {
              "command": "vspacecode.copyFilenameBase",
              "key": "N",
              "name": "Copy filename without extension of active file",
              "type": "command"
            },
            {
              "command": "vspacecode.copyRelativePath",
              "key": "Y",
              "name": "Copy relative path of active file",
              "type": "command"
            }
          ],
          "key": "y",
          "name": "Yank...",
          "type": "bindings"
        }
      ],
      "key": "f",
      "name": "File...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "magit.blame-file",
          "key": "b",
          "name": "Blame file",
          "type": "command"
        },
        {
          "command": "git.clone",
          "key": "c",
          "name": "Clone",
          "type": "command"
        },
        {
          "command": "git.init",
          "key": "i",
          "name": "Initialize repository",
          "type": "command"
        },
        {
          "command": "magit.dispatch",
          "key": "m",
          "name": "Magit dispatch",
          "type": "command"
        },
        {
          "command": "editor.action.dirtydiff.next",
          "key": "n",
          "name": "Show next change",
          "type": "command"
        },
        {
          "command": "editor.action.dirtydiff.previous",
          "key": "p",
          "name": "Show previous change",
          "type": "command"
        },
        {
          "command": "magit.status",
          "key": "s",
          "name": "Status",
          "type": "command"
        },
        {
          "command": "magit.stage-file",
          "key": "S",
          "name": "Stage file",
          "type": "command"
        },
        {
          "command": "magit.unstage-file",
          "key": "U",
          "name": "Unstage file",
          "type": "command"
        },
        {
          "bindings": [
            {
              "command": "magit.diff-file",
              "key": "d",
              "name": "Diff",
              "type": "command"
            },
            {
              "command": "timeline.focus",
              "key": "l",
              "name": "Show log/timeline",
              "type": "command"
            },
            {
              "command": "git.clean",
              "key": "x",
              "name": "revert changes to file since last commit",
              "type": "command"
            }
          ],
          "key": "f",
          "name": "File...",
          "type": "bindings"
        },
        {
          "command": "git.revertSelectedRanges",
          "key": "x",
          "name": "revert hunk",
          "type": "command"
        }
      ],
      "key": "g",
      "name": "Git...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "workbench.action.openDocumentationUrl",
          "key": "d",
          "name": "Open VSCode Documentation",
          "type": "command"
        },
        {
          "command": "workbench.action.openGlobalKeybindings",
          "key": "k",
          "name": "Open global key bindings",
          "type": "command"
        },
        {
          "command": "workbench.action.openIssueReporter",
          "key": "I",
          "name": "Report VSCode Issue",
          "type": "command"
        },
        {
          "command": "workbench.action.showInteractivePlayground",
          "key": "T",
          "name": "Open VSCode Tutorial",
          "type": "command"
        }
      ],
      "key": "h",
      "name": "Help...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "editor.action.insertLineAfter",
          "key": "j",
          "name": "Insert line below",
          "type": "command"
        },
        {
          "command": "editor.action.insertLineBefore",
          "key": "k",
          "name": "Insert line above",
          "type": "command"
        },
        {
          "command": "editor.action.insertSnippet",
          "key": "s",
          "name": "Insert snippet",
          "type": "command"
        }
      ],
      "key": "i",
      "name": "Insert...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "editor.action.format",
          "key": "=",
          "name": "Format region or buffer",
          "type": "command"
        },
        {
          "command": "workbench.action.gotoSymbol",
          "key": "i",
          "name": "Jump to symbol in buffer",
          "type": "command"
        },
        {
          "args": {
            "after": ["leader", "leader", "s"]
          },
          "command": "vim.remap",
          "key": "j",
          "name": "Jump to character",
          "type": "command"
        },
        {
          "args": {
            "after": ["leader", "leader", "leader", "b", "d", "j", "k"]
          },
          "command": "vim.remap",
          "key": "l",
          "name": "Jump to line",
          "type": "command"
        },
        {
          "command": "lineBreakInsert",
          "key": "n",
          "name": "Split new line",
          "type": "command"
        },
        {
          "command": "breadcrumbs.focusAndSelect",
          "key": "v",
          "name": "Jump to outline/variables",
          "type": "command"
        },
        {
          "commands": [
            "editor.action.addSelectionToNextFindMatch",
            "extension.ripgrep"
          ],
          "key": "r",
          "name": "jump with ripgrep",
          "type": "commands"
        },
        {
          "args": {
            "after": ["leader", "leader", "leader", "b", "d", "w"]
          },
          "command": "vim.remap",
          "key": "w",
          "name": "Jump to word",
          "type": "command"
        },
        {
          "command": "workbench.action.showAllSymbols",
          "key": "I",
          "name": "Jump to symbol in workspace",
          "type": "command"
        }
      ],
      "key": "j",
      "name": "Jump/Join/Split...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "workbench.action.closeFolder",
          "key": "d",
          "name": "Close workspace",
          "type": "command"
        }
      ],
      "key": "l",
      "name": "Layouts...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "extension.googleSearch",
          "key": "g",
          "name": "Google search selection",
          "type": "command"
        },
        {
          "command": "editor.action.openLink",
          "key": "o",
          "name": "open link at point",
          "type": "command"
        },
        {
          "command": "settings.cycle.colorTheme",
          "key": "t",
          "name": "Toggle night/dark themes",
          "type": "command"
        }
      ],
      "key": "o",
      "name": "User Defined...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "workbench.action.quickOpen",
          "key": "f",
          "name": "Find file in project...",
          "type": "command"
        },
        {
          "command": "workbench.action.openRecent",
          "key": "l",
          "name": "Switch project...",
          "type": "command"
        },
        {
          "command": "workbench.action.openRecent",
          "key": "p",
          "name": "Switch project...",
          "type": "command"
        },
        {
          "command": "workbench.view.explorer",
          "key": "t",
          "name": "Show tree/explorer view",
          "type": "command"
        },
        {
          "command": "workbench.action.replaceInFiles",
          "key": "R",
          "name": "Replace in files...",
          "type": "command"
        }
      ],
      "key": "p",
      "name": "Project...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "workbench.action.closeWindow",
          "key": "f",
          "name": "Close frame",
          "type": "command"
        },
        {
          "command": "workbench.action.closeWindow",
          "key": "q",
          "name": "Close frame",
          "type": "command"
        },
        {
          "command": "workbench.action.reloadWindow",
          "key": "r",
          "name": "Reload frame",
          "type": "command"
        },
        {
          "commands": [
            "workbench.action.files.saveAll",
            "workbench.action.closeWindow"
          ],
          "key": "s",
          "name": "Save all and close frame",
          "type": "commands"
        },
        {
          "command": "workbench.action.quit",
          "key": "Q",
          "name": "Quit application",
          "type": "command"
        },
        {
          "command": "workbench.action.reloadWindowWithExtensionsDisabled",
          "key": "R",
          "name": "Reload frame with extensions disabled",
          "type": "command"
        }
      ],
      "key": "q",
      "name": "Quit..",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "workbench.action.showAllEditorsByMostRecentlyUsed",
          "key": "b",
          "name": "Recent buffers",
          "type": "command"
        },
        {
          "command": "workbench.action.findInFiles",
          "key": "s",
          "name": "Search in project",
          "type": "command"
        }
      ],
      "key": "r",
      "name": "Resume...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "args": {
            "commands": [
              {
                "command": ":noh"
              }
            ]
          },
          "command": "vim.remap",
          "key": "c",
          "name": "Clear highlight",
          "type": "command"
        },
        {
          "command": "editor.action.rename",
          "key": "e",
          "name": "Edit symbol",
          "type": "command"
        },
        {
          "commands": [
            "editor.action.addSelectionToNextFindMatch",
            "search.action.openNewEditor"
          ],
          "key": "E",
          "name": "Search Editor with selection",
          "type": "commands"
        },
        {
          "bindings": [
            {
              "commands": [
                "editor.action.addSelectionToNextFindMatch",
                "workbench.action.findInFiles"
              ],
              "key": "/",
              "name": "Search in project with selection",
              "type": "commands"
            },
            {
              "command": "editor.action.wordHighlight.next",
              "key": "n",
              "name": "Next occurrence",
              "type": "command"
            },
            {
              "command": "editor.action.wordHighlight.prev",
              "key": "p",
              "name": "Previous occurrence",
              "type": "command"
            },
            {
              "command": "editor.action.wordHighlight.prev",
              "key": "N",
              "name": "Previous occurrence",
              "type": "command"
            }
          ],
          "command": "editor.action.wordHighlight.trigger",
          "key": "h",
          "name": "Highlight symbol",
          "type": "transient"
        },
        {
          "command": "workbench.action.gotoSymbol",
          "key": "j",
          "name": "Jump to symbol in buffer",
          "type": "command"
        },
        {
          "command": "editor.action.referenceSearch.trigger",
          "key": "r",
          "name": "Search all references",
          "type": "command"
        },
        {
          "command": "workbench.action.findInFiles",
          "key": "p",
          "name": "Search in project",
          "type": "command"
        },
        {
          "command": "fuzzySearch.activeTextEditorWithCurrentSelection",
          "key": "s",
          "name": "Fuzzy search in current buffer",
          "type": "command"
        },
        {
          "command": "workbench.action.showAllSymbols",
          "key": "J",
          "name": "Jump to symbol in workspace",
          "type": "command"
        },
        {
          "commands": [
            "editor.action.addSelectionToNextFindMatch",
            "workbench.action.findInFiles"
          ],
          "key": "P",
          "name": "Search in project with selection",
          "type": "commands"
        },
        {
          "command": "references-view.find",
          "key": "R",
          "name": "Search all references in side bar",
          "type": "command"
        },
        {
          "commands": [
            "editor.action.addSelectionToNextFindMatch",
            "fuzzySearch.activeTextEditorWithCurrentSelection"
          ],
          "key": "S",
          "name": "Fuzzy search with selection in current buffer",
          "type": "commands"
        }
      ],
      "key": "s",
      "name": "Search/Symbol...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "toggleFindCaseSensitive",
          "key": "c",
          "name": "Toggle find case sensitive",
          "type": "command"
        },
        {
          "command": "editor.action.toggleWordWrap",
          "key": "l",
          "name": "Toggle word wrap",
          "type": "command"
        },
        {
          "command": "settings.cycle.lineNumbers",
          "key": "n",
          "name": "Toggle line numbers",
          "type": "command"
        },
        {
          "command": "editor.action.toggleRenderWhitespace",
          "key": "w",
          "name": "Toggle render whitespace",
          "type": "command"
        }
      ],
      "key": "t",
      "name": "Toggles...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "workbench.action.splitEditorDown",
          "key": "-",
          "name": "Split window below",
          "type": "command"
        },
        {
          "command": "workbench.action.splitEditor",
          "key": "/",
          "name": "Split window right",
          "type": "command"
        },
        {
          "command": "workbench.action.evenEditorWidths",
          "key": "=",
          "name": "Reset window sizes",
          "type": "command"
        },
        {
          "bindings": [
            {
              "command": "workbench.action.decreaseViewSize",
              "key": "[",
              "name": "Shrink window",
              "type": "command"
            },
            {
              "command": "workbench.action.increaseViewSize",
              "key": "]",
              "name": "Enlarge window",
              "type": "command"
            }
          ],
          "command": "workbench.action.decreaseViewSize",
          "key": "[",
          "name": "Shrink window",
          "type": "transient"
        },
        {
          "bindings": [
            {
              "command": "workbench.action.decreaseViewSize",
              "key": "[",
              "name": "Shrink window",
              "type": "command"
            },
            {
              "command": "workbench.action.increaseViewSize",
              "key": "]",
              "name": "Enlarge window",
              "type": "command"
            }
          ],
          "command": "workbench.action.increaseViewSize",
          "key": "]",
          "name": "Enlarge window",
          "type": "transient"
        },
        {
          "command": "workbench.action.closeEditorsInGroup",
          "key": "d",
          "name": "Close window",
          "type": "command"
        },
        {
          "command": "workbench.action.focusPreviousGroup",
          "key": "h",
          "name": "Focus window left",
          "type": "command"
        },
        {
          "command": "workbench.action.focusBelowGroup",
          "key": "j",
          "name": "Focus window down",
          "type": "command"
        },
        {
          "command": "workbench.action.focusAboveGroup",
          "key": "k",
          "name": "Focus window up",
          "type": "command"
        },
        {
          "command": "workbench.action.focusNextGroup",
          "key": "l",
          "name": "Focus window right",
          "type": "command"
        },
        {
          "args": {
            "command": "multiCommand.trueMaximizeWindow"
          },
          "command": "extension.multiCommand.execute",
          "key": "m",
          "name": "Maximize window",
          "type": "command"
        },
        {
          "command": "workbench.action.quickSwitchWindow",
          "key": "o",
          "name": "Switch frame",
          "type": "command"
        },
        {
          "command": "workbench.action.splitEditorDown",
          "key": "s",
          "name": "Split window below",
          "type": "command"
        },
        {
          "command": "workbench.action.splitEditor",
          "key": "v",
          "name": "Split window right",
          "type": "command"
        },
        {
          "command": "workbench.action.focusNextGroup",
          "key": "w",
          "name": "Focus next window",
          "type": "command"
        },
        {
          "command": "workbench.action.closeAllGroups",
          "key": "x",
          "name": "Close all windows",
          "type": "command"
        },
        {
          "command": "workbench.action.joinAllGroups",
          "key": "z",
          "name": "Combine all buffers",
          "type": "command"
        },
        {
          "command": "workbench.action.closeEditorsInOtherGroups",
          "key": "D",
          "name": "Close all other windows",
          "type": "command"
        },
        {
          "command": "workbench.action.newWindow",
          "key": "F",
          "name": "Open new empty frame",
          "type": "command"
        },
        {
          "command": "workbench.action.moveActiveEditorGroupLeft",
          "key": "H",
          "name": "Move window left",
          "type": "command"
        },
        {
          "command": "workbench.action.moveActiveEditorGroupDown",
          "key": "J",
          "name": "Move window down",
          "type": "command"
        },
        {
          "command": "workbench.action.moveActiveEditorGroupUp",
          "key": "K",
          "name": "Move window up",
          "type": "command"
        },
        {
          "command": "workbench.action.moveActiveEditorGroupRight",
          "key": "L",
          "name": "Move window right",
          "type": "command"
        },
        {
          "command": "workbench.action.maximizeEditor",
          "key": "M",
          "name": "Maximize window and hide side bar",
          "type": "command"
        },
        {
          "command": "workbench.action.focusPreviousGroup",
          "key": "W",
          "name": "Focus previous window",
          "type": "command"
        }
      ],
      "key": "w",
      "name": "Window...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "editor.action.quickFix",
          "key": ".",
          "name": "Quick fix",
          "type": "command"
        },
        {
          "command": "editor.action.referenceSearch.trigger",
          "key": "a",
          "name": "Find all references",
          "type": "command"
        },
        {
          "command": "editor.action.organizeImports",
          "key": "i",
          "name": "Organize Imports",
          "type": "command"
        },
        {
          "command": "editor.action.rename",
          "key": "r",
          "name": "Rename symbol",
          "type": "command"
        },
        {
          "command": "editor.action.transformToLowercase",
          "key": "u",
          "name": "To lower case",
          "type": "command"
        },
        {
          "bindings": [
            {
              "command": "editor.action.moveLinesDownAction",
              "key": "J",
              "name": "Move lines down",
              "type": "command"
            },
            {
              "command": "editor.action.moveLinesUpAction",
              "key": "K",
              "name": "Move lines up",
              "type": "command"
            }
          ],
          "command": "editor.action.moveLinesDownAction",
          "key": "J",
          "name": "Move lines down",
          "type": "transient"
        },
        {
          "bindings": [
            {
              "command": "editor.action.moveLinesDownAction",
              "key": "J",
              "name": "Move lines down",
              "type": "command"
            },
            {
              "command": "editor.action.moveLinesUpAction",
              "key": "K",
              "name": "Move lines up",
              "type": "command"
            }
          ],
          "command": "editor.action.moveLinesUpAction",
          "key": "K",
          "name": "Move lines up",
          "type": "transient"
        },
        {
          "command": "editor.action.refactor",
          "key": "R",
          "name": "Refactor",
          "type": "command"
        },
        {
          "command": "editor.action.transformToUppercase",
          "key": "U",
          "name": "To upper case",
          "type": "command"
        },
        {
          "bindings": [
            {
              "command": "editor.action.trimTrailingWhitespace",
              "key": "w",
              "name": "Delete trailing whitespace",
              "type": "command"
            }
          ],
          "key": "d",
          "name": "Delete...",
          "type": "bindings"
        },
        {
          "bindings": [
            {
              "command": "editor.action.copyLinesDownAction",
              "key": "d",
              "name": "Duplicate lines down",
              "type": "command"
            },
            {
              "command": "editor.action.sortLinesAscending",
              "key": "s",
              "name": "Sort lines in ascending order",
              "type": "command"
            },
            {
              "command": "editor.action.copyLinesUpAction",
              "key": "D",
              "name": "Duplicate lines up",
              "type": "command"
            },
            {
              "command": "editor.action.sortLinesDescending",
              "key": "S",
              "name": "Sort lines in descending order",
              "type": "command"
            }
          ],
          "key": "l",
          "name": "Lines...",
          "type": "bindings"
        },
        {
          "bindings": [
            {
              "command": "merge-conflict.accept.both",
              "key": "b",
              "name": "Accept both",
              "type": "command"
            },
            {
              "command": "merge-conflict.accept.current",
              "key": "c",
              "name": "Accept current",
              "type": "command"
            },
            {
              "command": "merge-conflict.accept.incoming",
              "key": "i",
              "name": "Accept incoming",
              "type": "command"
            },
            {
              "command": "merge-conflict.compare",
              "key": "k",
              "name": "Compare current conflict",
              "type": "command"
            },
            {
              "command": "merge-conflict.next",
              "key": "n",
              "name": "Next Conflict",
              "type": "command"
            },
            {
              "command": "merge-conflict.accept.selection",
              "key": "s",
              "name": "Accept selection",
              "type": "command"
            },
            {
              "command": "merge-conflict.accept.all-both",
              "key": "B",
              "name": "Accept all both",
              "type": "command"
            },
            {
              "command": "merge-conflict.accept.all-current",
              "key": "C",
              "name": "Accept all current",
              "type": "command"
            },
            {
              "command": "merge-conflict.accept.all-incoming",
              "key": "I",
              "name": "Accept all incoming",
              "type": "command"
            },
            {
              "command": "merge-conflict.previous",
              "key": "N",
              "name": "Previous Conflict",
              "type": "command"
            }
          ],
          "key": "m",
          "name": "Merge conflict...",
          "type": "bindings"
        }
      ],
      "key": "x",
      "name": "Text...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "bindings": [
            {
              "command": "workbench.action.zoomIn",
              "key": "+",
              "name": "Zoom in",
              "type": "command"
            },
            {
              "command": "workbench.action.zoomOut",
              "key": "-",
              "name": "Zoom out",
              "type": "command"
            },
            {
              "command": "workbench.action.zoomReset",
              "key": "0",
              "name": "Reset zoom",
              "type": "command"
            },
            {
              "command": "workbench.action.zoomIn",
              "key": "=",
              "name": "Zoom in",
              "type": "command"
            }
          ],
          "key": "f",
          "name": "Frame...",
          "type": "transient"
        },
        {
          "bindings": [
            {
              "command": "imagePreview.zoomIn",
              "key": "+",
              "name": "Zoom in",
              "type": "command"
            },
            {
              "command": "imagePreview.zoomOut",
              "key": "-",
              "name": "Zoom out",
              "type": "command"
            },
            {
              "command": "imagePreview.zoomIn",
              "key": "=",
              "name": "Zoom in",
              "type": "command"
            }
          ],
          "key": "i",
          "name": "Image preview...",
          "type": "transient"
        },
        {
          "bindings": [
            {
              "command": "editor.action.fontZoomIn",
              "key": "+",
              "name": "Zoom in",
              "type": "command"
            },
            {
              "command": "editor.action.fontZoomOut",
              "key": "-",
              "name": "Zoom out",
              "type": "command"
            },
            {
              "command": "editor.action.fontZoomReset",
              "key": "0",
              "name": "Reset zoom",
              "type": "command"
            },
            {
              "command": "editor.action.fontZoomIn",
              "key": "=",
              "name": "Zoom in",
              "type": "command"
            }
          ],
          "key": "x",
          "name": "Font...",
          "type": "transient"
        },
        {
          "bindings": [
            {
              "command": "editor.toggleFold",
              "key": "a",
              "name": "Toggle: around a point",
              "type": "command"
            },
            {
              "command": "editor.foldAllBlockComments",
              "key": "b",
              "name": "Close: all block comments",
              "type": "command"
            },
            {
              "command": "editor.fold",
              "key": "c",
              "name": "Close: at a point",
              "type": "command"
            },
            {
              "command": "editor.foldAllMarkerRegions",
              "key": "g",
              "name": "Close: all regions",
              "type": "command"
            },
            {
              "command": "editor.foldAll",
              "key": "m",
              "name": "Close: all",
              "type": "command"
            },
            {
              "command": "editor.unfold",
              "key": "o",
              "name": "Open: at a point",
              "type": "command"
            },
            {
              "command": "editor.unfoldAll",
              "key": "r",
              "name": "Open: all",
              "type": "command"
            },
            {
              "command": "editor.unfoldAllMarkerRegions",
              "key": "G",
              "name": "Open: all regions",
              "type": "command"
            },
            {
              "command": "editor.unfoldRecursively",
              "key": "O",
              "name": "Open: recursively",
              "type": "command"
            }
          ],
          "key": ".",
          "name": "Fold...",
          "type": "bindings"
        }
      ],
      "key": "z",
      "name": "Zoom/Fold...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "workbench.files.action.compareWithClipboard",
          "key": "c",
          "name": "Compare active file with clipboard",
          "type": "command"
        },
        {
          "command": "merge-conflict.compare",
          "key": "m",
          "name": "Compare current merge conflict",
          "type": "command"
        },
        {
          "command": "workbench.files.action.compareWithSaved",
          "key": "s",
          "name": "Compare active file with saved",
          "type": "command"
        },
        {
          "command": "toggle.diff.ignoreTrimWhitespace",
          "key": "w",
          "name": "Toggle ignore trim whitespace",
          "type": "command"
        },
        {
          "command": "workbench.files.action.compareFileWith",
          "key": "D",
          "name": "Compare active file with...",
          "type": "command"
        }
      ],
      "key": "D",
      "name": "Diff/Compare...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "workbench.action.duplicateWorkspaceInNewWindow",
          "key": "n",
          "name": "Duplicate workspace in new frame",
          "type": "command"
        },
        {
          "command": "workbench.action.quickSwitchWindow",
          "key": "o",
          "name": "Switch frame",
          "type": "command"
        },
        {
          "command": "workbench.action.newWindow",
          "key": "N",
          "name": "Open new empty frame",
          "type": "command"
        }
      ],
      "key": "F",
      "name": "Frame...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "bindings": [
            {
              "command": "go.show.commands",
              "key": " ",
              "name": "Show all commands",
              "type": "command"
            },
            {
              "bindings": [
                {
                  "command": "editor.action.formatDocument",
                  "key": "=",
                  "name": "Format document",
                  "type": "command"
                },
                {
                  "command": "editor.action.formatDocument",
                  "key": "d",
                  "name": "Format document with...",
                  "type": "command"
                },
                {
                  "command": "editor.action.formatChanges",
                  "key": "m",
                  "name": "Format modified lines only",
                  "type": "command"
                },
                {
                  "command": "editor.action.formatSelection",
                  "key": "s",
                  "name": "Format selection",
                  "type": "command"
                },
                {
                  "command": "editor.action.formatSelection.multiple",
                  "key": "S",
                  "name": "Format selection with...",
                  "type": "command"
                }
              ],
              "key": "=",
              "name": "Format...",
              "type": "bindings"
            },
            {
              "bindings": [
                {
                  "command": "go.playground",
                  "key": "P",
                  "name": "Run code on Go Playground",
                  "type": "command"
                },
                {
                  "bindings": [
                    {
                      "command": "go.build.package",
                      "key": "b",
                      "name": "Build package",
                      "type": "command"
                    },
                    {
                      "command": "go.get.package",
                      "key": "g",
                      "name": "Get package",
                      "type": "command"
                    },
                    {
                      "command": "go.install.package",
                      "key": "i",
                      "name": "Install current package",
                      "type": "command"
                    },
                    {
                      "command": "go.lint.package",
                      "key": "l",
                      "name": "Lint package",
                      "type": "command"
                    },
                    {
                      "command": "go.browse.packages",
                      "key": "s",
                      "name": "Browse packages",
                      "type": "command"
                    },
                    {
                      "command": "go.vet.package",
                      "key": "v",
                      "name": "Vet package",
                      "type": "command"
                    }
                  ],
                  "key": "p",
                  "name": "Package actions...",
                  "type": "bindings"
                },
                {
                  "bindings": [
                    {
                      "command": "go.build.workspace",
                      "key": "b",
                      "name": "Build workspace",
                      "type": "command"
                    },
                    {
                      "command": "go.lint.workspace",
                      "key": "l",
                      "name": "Lint workspace",
                      "type": "command"
                    },
                    {
                      "command": "go.add.package.workspace",
                      "key": "p",
                      "name": "Add package to workspace",
                      "type": "command"
                    },
                    {
                      "command": "go.vet.workspace",
                      "key": "v",
                      "name": "Vet workspace",
                      "type": "command"
                    }
                  ],
                  "key": "w",
                  "name": "Workspace actions...",
                  "type": "bindings"
                }
              ],
              "key": "a",
              "name": "Actions...",
              "type": "bindings"
            },
            {
              "bindings": [
                {
                  "command": "go.environment.choose",
                  "key": "e",
                  "name": "Choose Go environment",
                  "type": "command"
                },
                {
                  "command": "go.gopath",
                  "key": "g",
                  "name": "Show current GOPATH",
                  "type": "command"
                },
                {
                  "command": "go.tools.install",
                  "key": "i",
                  "name": "Install/update tools",
                  "type": "command"
                },
                {
                  "command": "go.locate.tools",
                  "key": "l",
                  "name": "Locate configured Go tools",
                  "type": "command"
                },
                {
                  "command": "go.languageserver.restart",
                  "key": "R",
                  "name": "Restart language server",
                  "type": "command"
                }
              ],
              "key": "b",
              "name": "Backend/environment...",
              "type": "bindings"
            },
            {
              "bindings": [
                {
                  "command": "editor.action.revealDefinition",
                  "key": "d",
                  "name": "Go to definition",
                  "type": "command"
                },
                {
                  "command": "workbench.action.problems.focus",
                  "key": "e",
                  "name": "Go to errors/problems",
                  "type": "command"
                },
                {
                  "command": "editor.action.revealDefinition",
                  "key": "g",
                  "name": "Go to definition",
                  "type": "command"
                },
                {
                  "command": "workbench.action.gotoSymbol",
                  "key": "i",
                  "name": "Find symbol in file",
                  "type": "command"
                },
                {
                  "command": "workbench.action.gotoMethod",
                  "key": "m",
                  "name": "Go to method in file",
                  "type": "command"
                },
                {
                  "command": "editor.action.referenceSearch.trigger",
                  "key": "r",
                  "name": "Peek references",
                  "type": "command"
                },
                {
                  "command": "editor.action.goToTypeDefinition",
                  "key": "t",
                  "name": "Go to type definition",
                  "type": "command"
                },
                {
                  "command": "editor.action.peekDefinition",
                  "key": "D",
                  "name": "Peek definition",
                  "type": "command"
                },
                {
                  "command": "workbench.action.showAllSymbols",
                  "key": "I",
                  "name": "Find symbol in project",
                  "type": "command"
                },
                {
                  "command": "references-view.findReferences",
                  "key": "R",
                  "name": "Find all references",
                  "type": "command"
                },
                {
                  "command": "editor.action.peekTypeDefinition",
                  "key": "T",
                  "name": "Peek type definition",
                  "type": "command"
                }
              ],
              "key": "g",
              "name": "Go to...",
              "type": "bindings"
            },
            {
              "bindings": [
                {
                  "command": "go.fill.struct",
                  "key": "f",
                  "name": "Fill struct",
                  "type": "command"
                },
                {
                  "command": "go.import.add",
                  "key": "i",
                  "name": "Add import",
                  "type": "command"
                },
                {
                  "command": "go.add.tags",
                  "key": "t",
                  "name": "Add tags to struct fields",
                  "type": "command"
                },
                {
                  "command": "go.impl.cursor",
                  "key": "I",
                  "name": "Generate interface stubs",
                  "type": "command"
                },
                {
                  "command": "go.remove.tags",
                  "key": "T",
                  "name": "Remove tags from struct fields",
                  "type": "command"
                }
              ],
              "key": "i",
              "name": "Insert/remove...",
              "type": "bindings"
            },
            {
              "bindings": [
                {
                  "command": "editor.action.quickFix",
                  "key": ".",
                  "name": "Quick fix",
                  "type": "command"
                },
                {
                  "args": {
                    "kind": "refactor.extract"
                  },
                  "command": "editor.action.codeAction",
                  "key": "e",
                  "name": "Extract to function or variable",
                  "type": "command"
                },
                {
                  "command": "editor.action.rename",
                  "key": "r",
                  "name": "Rename symbol",
                  "type": "command"
                }
              ],
              "key": "r",
              "name": "Refactor...",
              "type": "bindings"
            },
            {
              "bindings": [
                {
                  "command": "go.test.cancel",
                  "key": "c",
                  "name": "Cancel running tets",
                  "type": "command"
                },
                {
                  "command": "go.debug.cursor",
                  "key": "d",
                  "name": "Debug test at cursor",
                  "type": "command"
                },
                {
                  "command": "go.test.cursor",
                  "key": "f",
                  "name": "Test function at cursor",
                  "type": "command"
                },
                {
                  "command": "go.test.previous",
                  "key": "l",
                  "name": "Test previous",
                  "type": "command"
                },
                {
                  "command": "go.test.package",
                  "key": "p",
                  "name": "Test package",
                  "type": "command"
                },
                {
                  "command": "go.subtest.cursor",
                  "key": "s",
                  "name": "Subtest at cursor",
                  "type": "command"
                },
                {
                  "command": "go.test.workspace",
                  "key": "w",
                  "name": "Test packages in workspace",
                  "type": "command"
                },
                {
                  "command": "go.test.file",
                  "key": "F",
                  "name": "Test file",
                  "type": "command"
                },
                {
                  "command": "go.apply.coverprofile",
                  "key": "P",
                  "name": "Apply cover profile",
                  "type": "command"
                },
                {
                  "bindings": [
                    {
                      "command": "go.benchmark.cursor",
                      "key": "f",
                      "name": "Benchmark function at cursor",
                      "type": "command"
                    },
                    {
                      "command": "go.benchmark.package",
                      "key": "p",
                      "name": "Benchmark package",
                      "type": "command"
                    },
                    {
                      "command": "go.benchmark.file",
                      "key": "F",
                      "name": "Benchmark file",
                      "type": "command"
                    }
                  ],
                  "key": "b",
                  "name": "Benchmarks...",
                  "type": "bindings"
                },
                {
                  "bindings": [
                    {
                      "command": "go.test.generate.function",
                      "key": "f",
                      "name": "Generate unit tests for function",
                      "type": "command"
                    },
                    {
                      "command": "go.test.generate.package",
                      "key": "p",
                      "name": "Generate unit tests for package",
                      "type": "command"
                    },
                    {
                      "command": "go.test.generate.file",
                      "key": "F",
                      "name": "Generate unit tests for file",
                      "type": "command"
                    }
                  ],
                  "key": "g",
                  "name": "Generate...",
                  "type": "bindings"
                },
                {
                  "bindings": [
                    {
                      "command": "go.test.coverage",
                      "key": "c",
                      "name": "Toggle test coverage in current package",
                      "type": "command"
                    },
                    {
                      "command": "go.toggle.test.file",
                      "key": "f",
                      "name": "Toggle open test file",
                      "type": "command"
                    }
                  ],
                  "key": "t",
                  "name": "Toggle...",
                  "type": "bindings"
                }
              ],
              "key": "t",
              "name": "Test...",
              "type": "bindings"
            }
          ],
          "key": "languageId:go",
          "name": "Go",
          "type": "bindings"
        },
        {
          "bindings": [
            {
              "bindings": [
                {
                  "command": "markdown.extension.printToHtml",
                  "key": "e",
                  "name": "Export to HTML",
                  "type": "command"
                },
                {
                  "command": "markdown.showPreviewToSide",
                  "key": "p",
                  "name": "Open preview to the side",
                  "type": "command"
                },
                {
                  "command": "markdown.showPreview",
                  "key": "P",
                  "name": "Open preview in current group",
                  "type": "command"
                }
              ],
              "key": "c",
              "name": "Buffer commands...",
              "type": "bindings"
            },
            {
              "bindings": [
                {
                  "command": "markdown.extension.toc.create",
                  "key": "c",
                  "name": "Create Table of Contents",
                  "type": "command"
                },
                {
                  "command": "markdown.extension.toc.addSecNumbers",
                  "key": "n",
                  "name": "Add section numbers",
                  "type": "command"
                },
                {
                  "command": "markdown.extension.toc.update",
                  "key": "u",
                  "name": "Update Table of Contents",
                  "type": "command"
                },
                {
                  "command": "markdown.extension.toc.removeSecNumbers",
                  "key": "N",
                  "name": "Remove section numbers",
                  "type": "command"
                }
              ],
              "key": "t",
              "name": "Table of Contents...",
              "type": "bindings"
            },
            {
              "bindings": [
                {
                  "bindings": [
                    {
                      "command": "markdown.extension.editing.toggleHeadingDown",
                      "key": "[",
                      "name": "Decrease Heading level",
                      "type": "command"
                    },
                    {
                      "command": "markdown.extension.editing.toggleHeadingUp",
                      "key": "]",
                      "name": "Increase Heading level",
                      "type": "command"
                    }
                  ],
                  "command": "markdown.extension.editing.toggleHeadingDown",
                  "key": "[",
                  "name": "Decrease Heading level",
                  "type": "transient"
                },
                {
                  "bindings": [
                    {
                      "command": "markdown.extension.editing.toggleHeadingDown",
                      "key": "[",
                      "name": "Decrease Heading level",
                      "type": "command"
                    },
                    {
                      "command": "markdown.extension.editing.toggleHeadingUp",
                      "key": "]",
                      "name": "Increase Heading level",
                      "type": "command"
                    }
                  ],
                  "command": "markdown.extension.editing.toggleHeadingUp",
                  "key": "]",
                  "name": "Increase Heading level",
                  "type": "transient"
                },
                {
                  "command": "markdown.extension.editing.toggleCodeSpan",
                  "key": "`",
                  "name": "Toggle inline code",
                  "type": "command"
                },
                {
                  "command": "markdown.extension.editing.toggleBold",
                  "key": "b",
                  "name": "Toggle bold",
                  "type": "command"
                },
                {
                  "command": "markdown.extension.editing.toggleItalic",
                  "key": "i",
                  "name": "Toggle italic",
                  "type": "command"
                },
                {
                  "command": "markdown.extension.editing.toggleList",
                  "key": "l",
                  "name": "Toggle list",
                  "type": "command"
                },
                {
                  "command": "markdown.extension.editing.toggleMath",
                  "key": "m",
                  "name": "Toggle math",
                  "type": "command"
                },
                {
                  "command": "markdown.extension.editing.toggleStrikethrough",
                  "key": "s",
                  "name": "Toggle strikethrough",
                  "type": "command"
                },
                {
                  "command": "markdown.extension.editing.toggleCodeBlock",
                  "key": "~",
                  "name": "Toggle code block",
                  "type": "command"
                }
              ],
              "key": "x",
              "name": "Text...",
              "type": "bindings"
            }
          ],
          "key": "languageId:markdown",
          "name": "Markdown",
          "type": "bindings"
        }
      ],
      "key": "m",
      "name": "Major...",
      "type": "conditional"
    },
    {
      "bindings": [
        {
          "command": "workbench.debug.action.toggleRepl",
          "key": "d",
          "name": "Show debug console",
          "type": "command"
        },
        {
          "command": "workbench.view.explorer",
          "key": "e",
          "name": "Show explorer",
          "type": "command"
        },
        {
          "command": "workbench.view.scm",
          "key": "g",
          "name": "Show source control",
          "type": "command"
        },
        {
          "command": "workbench.action.output.toggleOutput",
          "key": "o",
          "name": "Show output",
          "type": "command"
        },
        {
          "command": "workbench.actions.view.problems",
          "key": "p",
          "name": "Show problem",
          "type": "command"
        },
        {
          "command": "workbench.view.remote",
          "key": "r",
          "name": "Show remote explorer",
          "type": "command"
        },
        {
          "command": "workbench.view.search",
          "key": "s",
          "name": "Show search",
          "type": "command"
        },
        {
          "command": "workbench.view.extension.test",
          "key": "t",
          "name": "Show test",
          "type": "command"
        },
        {
          "command": "workbench.view.extensions",
          "key": "x",
          "name": "Show extensions",
          "type": "command"
        }
      ],
      "key": "S",
      "name": "Show...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "workbench.action.toggleSidebarVisibility",
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command"
        },
        {
          "command": "workbench.action.toggleCenteredLayout",
          "key": "c",
          "name": "Toggle centered layout",
          "type": "command"
        },
        {
          "command": "workbench.action.selectIconTheme",
          "key": "i",
          "name": "Select icon theme",
          "type": "command"
        },
        {
          "command": "workbench.action.togglePanel",
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command"
        },
        {
          "command": "workbench.action.toggleMaximizedPanel",
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command"
        },
        {
          "command": "editor.action.toggleMinimap",
          "key": "M",
          "name": "Toggle minimap",
          "type": "command"
        },
        {
          "command": "workbench.action.selectTheme",
          "key": "s",
          "name": "Select theme",
          "type": "command"
        },
        {
          "command": "workbench.action.toggleActivityBarVisibility",
          "key": "t",
          "name": "Toggle tool/activity bar visibility",
          "type": "command"
        },
        {
          "command": "workbench.action.toggleZenMode",
          "key": "z",
          "name": "Toggle zen mode",
          "type": "command"
        },
        {
          "command": "workbench.action.toggleFullScreen",
          "key": "F",
          "name": "Toggle full screen",
          "type": "command"
        },
        {
          "command": "workbench.action.toggleTabsVisibility",
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command"
        }
      ],
      "key": "T",
      "name": "UI toggles...",
      "type": "bindings"
    }
  ],
  "window.nativeFullScreen": false,
  "window.restoreWindows": "none",
  "window.title": "${activeEditorShort}${separator}${activeFolderMedium}${separator}${rootName}${separator}",
  "window.zoomLevel": 0,
  "workbench.activityBar.visible": true,
  "workbench.colorTheme": "One Dark Pro",
  "workbench.editor.showTabs": true,
  "workbench.editorAssociations": [
    {
      "filenamePattern": "git-rebase-todo",
      "viewType": "default"
    }
  ],
  "workbench.iconTheme": "vs-minimal",
  "workbench.startupEditor": "newUntitledFile",
  "zenMode.centerLayout": false,
  "zenMode.fullScreen": false
}
